/// Helper utility to set both height and weight at the same time. Pass a single
/// value to set both height and width to the same size. If the value passed is
/// unitless and between 0 and 100, the mixin will assume percentage units. If
/// the value is unitless and outsize that range, the mixin will assume rem
/// units.
///
/// @param {Length-Percentage|String} $width - A length dimension (ex. 20rem or
/// 300px or 10%). If `max` is passed then both height and width are set to 100%.
/// @param {Length-Percentage} $height [$width] - A length dimension. If no
/// value is entered $height is set equal to $width.
///
/// @group Utilities
/// @throw Invalid data type for $width
/// @throw Invalid data type for $height
@mixin size($width, $height: $width) {
  @if ($width == 'max') {
    $height: 100%;
    $width: 100%;
  }
  @if type-of($width) != 'number' or type-of($height) != 'number' {
    @error 'You have passed an invalid data type to the `size` mixin. ' +
        'You attempted to pass `(#{inspect($width)}, #{inspect($height)})` as lengths.';
  }
  @if (unitless($width) and $width > 0 and $width <= 100) {
    @warn 'The $width parameter passed to the `size` mixin was unitless. ' +
        'Assuming you meant #{inspect($width)}%';
    $width: $width * 1%;
  } @else if (unitless($width)) {
    @warn 'The $width parameter passed to the `size` mixin was unitless. ' +
        'Assuming you meant #{inspect($width)}rem';
    $width: $width * 1rem;
  }
  @if (unitless($height) and $height > 0 and $height <= 100) {
    @warn 'The $height parameter passed to the `size` mixin was unitless. ' +
        'Assuming you meant #{inspect($height)}%';
    $height: $height * 1%;
  } @else if (unitless($height)) {
    @warn 'The $height parameter passed to the `size` mixin was unitless. ' +
        'Assuming you meant #{inspect($height)}rem';
    $height: $height * 1rem;
  }
  @if function-exists(is-length) {
    @if (not is-length($width)) {
      @error 'You have passed an invalid value for $width to the `size` ' +
          'mixin. Please pass a valid relative or absolute length'
    }
  }
  height: $height;
  width: $width;
}
